---
addTopBarIcon: 使用插件添加一个顶栏按钮
cancel: 取消
save: 保存
byeMenu: 再见，菜单！
helloPlugin: 你好，插件！
byePlugin: 再见，插件！
summarize: "总结"
autoTag: 生成标记
saveChat: 保存聊天记录
clear: 清除
chatPlaceHolder: 您好，我是您的笔记小助手! 尝试使用 @ 开启更多功能。
send: 发送
saveChatTitle: 保存到
saveChatDesc: 插件会使用当前选择的笔记本来保存聊天记录
role: 角色扮演
roleDesc: 让LLM扮演一个角色，让它能更精准提供回复
aiEmoji: 表情包或文字
aiEmojiDesc: 当你抄下人工智能对话时，会使用该表情包来标记这是人工智能生成的内容，用以提醒用户。当然我们不能完全相信人工智能的话，所以推荐用户标记起来
enterToSend: 快捷键
enterToSendDesc: 按下Enter将发送信息
customSystemPrompt: 个性化LLM系统提示
customSystemPromptDesc: 如果以上角色没有你需要的，你可以选择这个个性化LLM系统提示，让LLM更好的服务你。 使用这个功能将改变原有选择的角色。
customUserPrompt: 个性化用户提问提示
customUserPromptDesc: 这段话会被复制到每一条LLM对话信息里，增强语境
settings: 笔记小助手的设置
pluginName: 笔记小助手
pleaseSelect: 请选择
noAIDetected: 这个插件需要激活AI的功能才可以使用。
noAIDetected2: 在Setting 》AI的目录打开功能
PA: 个人助理
CD: 程序员
SE: 软件工程师
SA: 方案架构师
ET: 英语老师
TG: 导游
PC: 抄袭检查器
ST: 说故事的人
MT: 数学老师
CS: 网络安全专家
FA: 金融分析师
ML: 机器学习工程师
DS: 数据科学家
noNotebookSelected: 请在插件设置里选择一个文本用以保存记录  
AIConfigTitle: 注意
AIConfigDesc: 这个插件使用思源原生AI设置，你需要完成AI设置才能使用这个插件。
localEmbeddingEnabled: "启用本地嵌入(Embedding)服务"
localEmbeddingEnabledDesc: "启用本地嵌入(Embedding)服务将使用transformer.js和onnx运行时在SiYuan中创建嵌入(Embedding)库，在此过程中可能会稍微慢一些， 请耐心等候。此功能是使用您自己的数据来进行RAG（检索增强生成），所有数据都存储在SiYuan中。"
tagsAdded: "标签已添加到文档"
noTagsSelected: "未选择标签"
summarySaved: "摘要已保存"
selectTags: "选择以下标签添加到您的文档"
summaryText: "AI摘要"
noResult: "无结果"
searchNote: "相似性搜索是一种根据与查询对象的相似性检索对象的搜索方法，而不是精确的关键字匹配。与全文搜索相比，您将会有不同的体验，并且不能保证返回的结果是相关的。"
blockNotFound: "块未找到，可能已被删除或移除"
searchNotebook: "搜索笔记本"
allNotebook: "所有笔记本"
createdEmbeddings: "已创建嵌入副本"
resultFound: "找到结果"
similarity: "相似性"
fts: "全文搜索"
ss: "相似性搜索"
getContentFromNotebook: "从笔记本获取内容"
downloadOnnxRuntime: "从huggingface下载模型并设置onnx运行时"
embddingModelCreated: "嵌入模型已设置"
createdEmbeddingsSuccess: "成功创建嵌入"
unableToSetupVDB: "无法设置本地嵌入模型"
embeddedAndChunk: "为笔记本创建嵌入和分块"
selectNotebook: "选择笔记本"
createEmbeddingsNote1: "此操作将根据您的笔记本和文档创建嵌入(Embedding)，大约需要1 - 60分钟，具体取决于您的机器性能和数据量。在此操作运行期间，请勿关闭nb-assistant或退出SiYuan。此过程完成后，您将能够使用此笔记本创建的嵌入进行RAG。"
createEmbeddingsNote2: "创建的嵌入不会自动更新，因为这是一项可能影响SiYuan性能的重任务。因此，需要用户选择笔记本来创建嵌入和分块。选择相同的笔记本创建嵌入库将删除现有副本并使用最新的笔记本内容重新创建。"
createEmbeddingsNote3: "为所有笔记本创建嵌入将需要更长时间，具体取决于您的机器性能和笔记本内容。请耐心等待。"
confirm: "确认"
searchContent: "从您的文档中搜索"
nothingToEmbed: "没有转换的内容，请检查笔记本是否为空。如果不是，请在github上向开发者提交工单"
processTakeX: "此过程可能需要大约"
minutes: "分钟"
saveVDBFail: "保存向量数据库失败，5秒后重试"
remainingXToProcess: "剩余[x]待处理"
processedXAndYLeft: "已处理[x]个分块，剩余[y]待处理"
cacheModel: 嵌入(Embedding)服务
cacheModelDesc: 本地嵌入服务使用 transformer.js 和 onnx runtime 在 SiYuan 中创建嵌入。过程可能稍慢。此功能用于使用自有数据的 RAG（检索增强生成）。所有数据存储在 SiYuan 中。
cacheModelDesc2": 下载的模型将缓存于 SiYuan，但退出 SiYuan 后,缓存可能丢失/重置。再次打开此选项将重新下载模型缓存。
saveToDoc: 保存致文档
embeddingAlert: 请确保您没有选择包含任何敏感信息的笔记本。如果被制造成嵌入（Embedding），在RAG检索过程中，可能会检索到这些信息并发送给AI服务。
embeddingHint: 嵌入（Embedding）创建后，您可以使用'@'选择笔记本并提供笔记本内容以进行RAG处理。
aiApiKey: 访问AI服务所需的API密钥。
aiApiUrl: AI服务API的基础URL端点。例如：OpenAI为'https://api.openai.com'，Claude为'https://api.anthropic.com'，本地Ollama为'http://localhost:11434'。
aiModel: 使用的特定AI模型标识符。例如：OpenAI的'gpt-4'，Anthropic的'claude-3-opus-20240229'，或Ollama的'llama2'。不同模型具有不同的能力和成本。
aiCustomSystemPrompt: 设置AI行为、角色和约束的初始系统级指令。此提示在对话开始时提供一次，以建立上下文和指南。在使用此模型时，这将应用于每条消息之上。
aiCustomUserPrompt: 用户消息的模板或前缀。可用于在将每个用户输入发送到AI之前格式化或提供额外的上下文。在使用此模型时，这将应用于每条消息之上。
aiMaxTokens: AI应在响应中生成的最大令牌数（单词/字符）。较高的值允许更长的响应，但消耗更多资源。典型范围：256-4096。
aiTemperature: 控制AI响应中的随机性。范围0.0-2.0。较低的值（例如0.2）提供集中的、确定性的响应；较高的值（例如0.8）产生更具创造性、多样化的输出。
aiTopP: 核采样参数。范围0.0-1.0。通过选择累积概率超过此值的最小令牌集来控制多样性。较低的值使输出更集中。
aiTopK: 将令牌选择限制为最可能的K个下一个令牌。较低的值（例如40）使输出更集中，而较高的值允许更多样化的可能性。
aiPresencePenalty: 范围-2.0到2.0。调整讨论新话题的可能性。正值鼓励模型讨论新话题，而负值使其专注于现有话题。
aiFrequencyPenalty: 范围-2.0到2.0。调整令牌重复的可能性。正值通过惩罚频繁使用的令牌来减少重复，而负值允许更多重复。
aiStopWords: 指示AI停止生成进一步内容的字符串数组。用于控制响应格式和防止不需要的延续。例如：###,Human,Assistant
aiChooseEmbedding: 本地模型直接在您的设备上运行，提供隐私保护，且不依赖互联网。可是，本地模型可能没有互联网的AI服务来的精准。
aiEmbeddingModelDesc: 用于创建RAG过程和相似搜索的嵌入模型。
aiEmbeddingModel: 本地嵌入模型
aiLocalEmbedding: 本地嵌入模型 (Transformer.js)
aiEmbeddingModelProvider: 嵌入模型供应商
aiAiproviderEmbedding: 模型供应商 (Ollama/OpenAI)
aiTitleApiKey: API Key
aiTitleApiUrl: API URL
aiTitleModel: 模型
aiTitleCustomSystemPrompt: 自定义模型提示
aiTitleCustomUserPrompt: 自定义用户提示
aiTitleMaxTokens: 最大令牌数
aiTitleTemperature: 温度
aiTitleTopP: Top P
aiTitleTopK: Top K
aiTitlePresencePenalty: 出现率惩罚
aiTitleFrequencyPenalty: 频率率惩罚
aiTitleStopWords: 停止词
truncateHistory: 保留对话上下文
truncateHistoryDesc: 在聊天历史中排除较早的消息，仅保留最近的 X 条消息以维持对话上下文
notWorkingInO1: OpenAI o1系列模型不适用此设置
localEmbeddingSuppDesc1: 当前使用本地嵌入模型
localEmbeddingSuppDesc2: "，由Transformer.js和Huggingface提供"
localEmbeddingSuppDesc3: "如果从Huggingface拉取模型失败，建议使用OpenAI或Ollama提供的其他嵌入模型"
providerEmbeddingSuppDesc1: 当前使用嵌入模型
providerEmbeddingSuppDesc2: "，由"
providerEmbeddingSuppDesc3: "对于Ollama，请确保在创建嵌入时其已启动并运行"
aliasForMore: "@ 更多操作"
matching: "匹配"
style: "风格"
size: "尺寸"
imageFnSupport1: "此功能仅支持OpenAI Dall-E 3模型。"
searchForNbOrDoc: "搜索笔记本或文档"
intro1: "你好，我是你的笔记本助手。"
intro2: "今天有什么可以帮你的吗？"
gettingStarted: "入门指南"
model: "模型"
removeMessage: 你真的要删除此信息吗？
yes: 是的,
no: 不,
thoughtProcess: 思考过程
chatHistory: 聊天记录
gettingStarted1: "这些按钮可帮助你在不同视图间切换：搜索、向量数据库、开启新聊天、聊天记录和聊天界面。"
gettingStarted2: "选择用于对话的AI模型。"
gettingStarted3: "使用@命令快速执行操作，例如保存聊天、总结文档、自动标记和添加上下文。"
gettingStarted4: "在此输入消息。按Enter键发送（可在设置中配置）。"
gettingStarted5: "配置你的偏好设置、API密钥和其他选项。"
gettingStartedTitle1: "插件目录"
gettingStartedTitle2: "AI模型"
gettingStartedTitle3: "快捷操作"
gettingStartedTitle4: "聊天输入"
gettingStartedTitle5: "插件设置"
nbNameOrDocName: 笔记本名字 / 文档名称
imageGenDesc: 描述你想要生成的图片， 越仔细越好
summarizeDoc: 总结文档
addContext: 上下文
imageGeneration: 生成图片
vivid: 生动逼真
natural: 自然
documentName: 文档名
noteSaved: 聊天记录已保存至文档
quckAct1: 快速执行操作： 生成向量嵌入